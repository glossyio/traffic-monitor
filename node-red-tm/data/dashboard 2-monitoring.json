[
    {
        "id": "0fa19dea799cc41d",
        "type": "tab",
        "label": "Dashboard 2 - Monitoring",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "30d5f95b51a19a92",
        "type": "group",
        "z": "0fa19dea799cc41d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "61ce02565677e825",
            "c0e4e6adcc7a5782",
            "d30d84986a8c41bc"
        ],
        "x": 144,
        "y": 193,
        "w": 632,
        "h": 148
    },
    {
        "id": "9a78c94293803e49",
        "type": "group",
        "z": "0fa19dea799cc41d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "0a16f2a32973e96e",
            "b4c9b122afb34876",
            "cac9b4933417e60c",
            "463d933f207505c2"
        ],
        "x": 134,
        "y": 819,
        "w": 872,
        "h": 142
    },
    {
        "id": "793988735b710932",
        "type": "group",
        "z": "0fa19dea799cc41d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7500f6780dee6eb1",
            "4d6e3b9832beb86d",
            "b73ab00e77148f62",
            "4ac7575557241d3e"
        ],
        "x": 134,
        "y": 659,
        "w": 912,
        "h": 142
    },
    {
        "id": "ace8ea830f3a6877",
        "type": "group",
        "z": "0fa19dea799cc41d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "ca26a14eb3961c1f",
            "52c59e6d6d990e41",
            "b641d9844dc739cd",
            "fa5d96e6ffb70fcf"
        ],
        "x": 134,
        "y": 499,
        "w": 912,
        "h": 142
    },
    {
        "id": "dc5a88bd7605f321",
        "type": "group",
        "z": "0fa19dea799cc41d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d077a9d3b85203c0",
            "8c5ad4dc749b0552",
            "7d45f3dde88536d9",
            "ae4b925039bf6e52"
        ],
        "x": 134,
        "y": 359,
        "w": 972,
        "h": 122
    },
    {
        "id": "3c7e6d7cf17e8ddc",
        "type": "catch",
        "z": "0fa19dea799cc41d",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 170,
        "y": 40,
        "wires": [
            [
                "9a6c9507f7b016ee"
            ]
        ]
    },
    {
        "id": "9a6c9507f7b016ee",
        "type": "debug",
        "z": "0fa19dea799cc41d",
        "name": "catch: all - dashboard 2 monitoring",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 40,
        "wires": []
    },
    {
        "id": "61ce02565677e825",
        "type": "link in",
        "z": "0fa19dea799cc41d",
        "g": "30d5f95b51a19a92",
        "name": "dashboard-2-cars",
        "links": [
            "51ef499f21462fe5"
        ],
        "x": 195,
        "y": 300,
        "wires": [
            [
                "c0e4e6adcc7a5782"
            ]
        ]
    },
    {
        "id": "8c5ad4dc749b0552",
        "type": "link in",
        "z": "0fa19dea799cc41d",
        "g": "dc5a88bd7605f321",
        "name": "dashboard-2 cumulative observations by type since 0400",
        "links": [
            "1b8526347f65ae81"
        ],
        "x": 185,
        "y": 440,
        "wires": [
            [
                "ae4b925039bf6e52"
            ]
        ]
    },
    {
        "id": "36c8938384843a46",
        "type": "comment",
        "z": "0fa19dea799cc41d",
        "name": "Dashboard-2 version of Monitoring page",
        "info": "",
        "x": 280,
        "y": 100,
        "wires": []
    },
    {
        "id": "d30d84986a8c41bc",
        "type": "comment",
        "z": "0fa19dea799cc41d",
        "g": "30d5f95b51a19a92",
        "name": "Today's Car Counts and Speeds, since 0400",
        "info": "",
        "x": 340,
        "y": 234,
        "wires": []
    },
    {
        "id": "7d45f3dde88536d9",
        "type": "comment",
        "z": "0fa19dea799cc41d",
        "g": "dc5a88bd7605f321",
        "name": "Cumulative Observations by Type since 0400",
        "info": "",
        "x": 330,
        "y": 400,
        "wires": []
    },
    {
        "id": "ca26a14eb3961c1f",
        "type": "comment",
        "z": "0fa19dea799cc41d",
        "g": "ace8ea830f3a6877",
        "name": "Observations by Type for Each Hour for the Last 24 Hours",
        "info": "",
        "x": 370,
        "y": 540,
        "wires": []
    },
    {
        "id": "52c59e6d6d990e41",
        "type": "link in",
        "z": "0fa19dea799cc41d",
        "g": "ace8ea830f3a6877",
        "name": "dashboard-2 Observations by Type for Each Hour for the Last 24 Hours",
        "links": [
            "3cdf16d288b5de2b"
        ],
        "x": 185,
        "y": 600,
        "wires": [
            [
                "fa5d96e6ffb70fcf"
            ]
        ]
    },
    {
        "id": "fa5d96e6ffb70fcf",
        "type": "function",
        "z": "0fa19dea799cc41d",
        "g": "ace8ea830f3a6877",
        "name": "format data for chart",
        "func": "// input format: [{series (e.g. object types), [array with entry per type as {hour, count}]}]\nconst series = msg.payload[0].series;\nconst data = msg.payload[0].data;\nconst results = [];\n//process types in this order to get consistent colors across charts\nconst types = ['bicycle', 'person', 'car', 'dog', 'motorcycle'];\nfor (const type of types) {\n  const index = series.findIndex(element => element === type);\n  if (index >= 0\n      && index < data.length) {\n    const entry = data[index];\n    // reorganize input data so that it is in the format [hour, type, count]\n    // rather than [[hour, count]] where the outer array is ordered by type\n    for (const hourEntry of entry) {\n      const date = new Date(hourEntry.x);\n      const count = hourEntry.y;\n      results.push({ type, date, count });\n    }\n  }\n}\n// sort results by date to get the earliest first\nresults.sort(function(a, b) {\n  return a.date.valueOf() - b.date.valueOf();\n});\n// convert to local time and extract the weekday and hour to minimize clutter in the chart legend\nconst shortTimeStyle = new Intl.DateTimeFormat(undefined, { timeStyle: \"short\", });\nconst weekdayStyle = new Intl.DateTimeFormat(undefined, { weekday: \"short\" });\nresults.forEach((result) => result.hour = weekdayStyle.format(result.date) + ' ' + shortTimeStyle.format(result.date));\nreturn {payload: results};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 600,
        "wires": [
            [
                "b641d9844dc739cd"
            ]
        ]
    },
    {
        "id": "7500f6780dee6eb1",
        "type": "function",
        "z": "0fa19dea799cc41d",
        "g": "793988735b710932",
        "name": "format data for chart",
        "func": "// input format: [{series (e.g. object types), [array with entry per type as {date, day, count}]}]\nconst series = msg.payload[0].series;\nconst data = msg.payload[0].data;\nconst results = [];\n//process types in this order to get consistent colors across charts\nconst types = ['bicycle', 'person', 'car', 'dog', 'motorcycle'];\nfor (const type of types) {\n  const index = series.findIndex(element => element === type);\n  if (index >= 0\n    && index < data.length) {\n    const entry = data[index];\n    // reorganize input data so that it is in the format [date, day, type, count]\n    // rather than [[date, day, count]] where the outer array is ordered by type\n    for (const dayEntry of entry) {\n      const date = dayEntry.x;\n      const count = dayEntry.y;\n      const day = dayEntry.day;\n      results.push({ type, date, day, count });\n    }\n  }\n}\n// sort results by date to get the earliest first\nresults.sort(function(a, b) {\n  return a.date.valueOf() - b.date.valueOf();\n});\n\nreturn {payload: results};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 760,
        "wires": [
            [
                "b73ab00e77148f62"
            ]
        ]
    },
    {
        "id": "4d6e3b9832beb86d",
        "type": "link in",
        "z": "0fa19dea799cc41d",
        "g": "793988735b710932",
        "name": "dashboard-2 Observations by Type for Each Day for the Last 10 Days",
        "links": [
            "4aa9d363945f4a02"
        ],
        "x": 185,
        "y": 760,
        "wires": [
            [
                "7500f6780dee6eb1"
            ]
        ]
    },
    {
        "id": "4ac7575557241d3e",
        "type": "comment",
        "z": "0fa19dea799cc41d",
        "g": "793988735b710932",
        "name": "Observations by Type for Each Day for the Last 10 Days",
        "info": "",
        "x": 360,
        "y": 700,
        "wires": []
    },
    {
        "id": "0a16f2a32973e96e",
        "type": "comment",
        "z": "0fa19dea799cc41d",
        "g": "9a78c94293803e49",
        "name": "dashboard-2 Latest Observations",
        "info": "",
        "x": 290,
        "y": 860,
        "wires": []
    },
    {
        "id": "b4c9b122afb34876",
        "type": "link in",
        "z": "0fa19dea799cc41d",
        "g": "9a78c94293803e49",
        "name": "dashboard-2 Latest Events",
        "links": [
            "3bb1ab86f5f416ef"
        ],
        "x": 195,
        "y": 920,
        "wires": [
            [
                "cac9b4933417e60c"
            ]
        ]
    },
    {
        "id": "cac9b4933417e60c",
        "type": "function",
        "z": "0fa19dea799cc41d",
        "g": "9a78c94293803e49",
        "name": "format images and data for display",
        "func": "const payload = [];\nmsg.payload.forEach((item) => {\n    const img = \"data:image/jpg;base64, \" + item.thumbnail_base64jpg;\n    const {thumbnail_base64jpg: _, ...details} = item; // copy all fields except image\n    payload.push({img, details});\n})\nmsg.payload = payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 920,
        "wires": [
            [
                "463d933f207505c2"
            ]
        ]
    },
    {
        "id": "d077a9d3b85203c0",
        "type": "ui-chart",
        "z": "0fa19dea799cc41d",
        "g": "dc5a88bd7605f321",
        "group": "5596ebe888e76042",
        "name": "Cumulative Observations by Type since Midnight",
        "label": "Cumulative Observations by Type since Midnight",
        "order": 2,
        "chartType": "bar",
        "category": "",
        "categoryType": "none",
        "xAxisLabel": "",
        "xAxisProperty": "label",
        "xAxisPropertyType": "property",
        "xAxisType": "category",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Count",
        "yAxisProperty": "count",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "replace",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#000000"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "6",
        "height": "1",
        "className": "section-border",
        "interpolation": "linear",
        "x": 890,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "b641d9844dc739cd",
        "type": "ui-chart",
        "z": "0fa19dea799cc41d",
        "g": "ace8ea830f3a6877",
        "group": "5596ebe888e76042",
        "name": "Observations by Type for Each Hour for the Last 36 Hours",
        "label": "Observations by Type for Each Hour for the Last 36 Hours",
        "order": 4,
        "chartType": "bar",
        "category": "type",
        "categoryType": "property",
        "xAxisLabel": "Hour",
        "xAxisProperty": "hour",
        "xAxisPropertyType": "property",
        "xAxisType": "category",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Count",
        "yAxisProperty": "count",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "replace",
        "stackSeries": true,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#080808"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "section-border section-title",
        "interpolation": "linear",
        "x": 810,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "b73ab00e77148f62",
        "type": "ui-chart",
        "z": "0fa19dea799cc41d",
        "g": "793988735b710932",
        "group": "5596ebe888e76042",
        "name": "Observations by Type for Each Day for the Last 10 Days",
        "label": "Observations by Type for Each Day for the Last 10 Days",
        "order": 3,
        "chartType": "bar",
        "category": "type",
        "categoryType": "property",
        "xAxisLabel": "Day",
        "xAxisProperty": "day",
        "xAxisPropertyType": "property",
        "xAxisType": "category",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Count",
        "yAxisProperty": "count",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "replace",
        "stackSeries": true,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#080808"
        ],
        "textColorDefault": false,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "section-border section-title",
        "interpolation": "linear",
        "x": 810,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "c0e4e6adcc7a5782",
        "type": "ui-template",
        "z": "0fa19dea799cc41d",
        "g": "30d5f95b51a19a92",
        "group": "5596ebe888e76042",
        "page": "",
        "ui": "",
        "name": "Today's Car Counts and Speeds, since 0400",
        "order": 1,
        "width": "6",
        "height": "1",
        "head": "",
        "format": "<p class=\"section-title\">Today's Car Counts and Speeds, since 0400</p>\n<table class=\"table\" style=\"margin-left:30%;margin-right:30%\">\n    <tr v-for=\"payload in msg.payload\">\n        <td>{{Object.keys(payload)[0]}}</td>\n        <td>{{Object.values(payload)[0]}}</td>\n    </tr>\n</table>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "section-border",
        "x": 580,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "eea887327a18a5c7",
        "type": "ui-template",
        "z": "0fa19dea799cc41d",
        "group": "",
        "page": "",
        "ui": "2a8899583532edb4",
        "name": "CSS  (All Pages)",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": ".section-title {\n    font-weight: bold;\n    text-align: center;\n    font-size: larger;\n}\n\n.section-border {\n    border-style: solid;\n}",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "site:style",
        "className": "",
        "x": 200,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "463d933f207505c2",
        "type": "ui-template",
        "z": "0fa19dea799cc41d",
        "g": "9a78c94293803e49",
        "group": "5596ebe888e76042",
        "page": "",
        "ui": "",
        "name": "Latest Observations (updated as they happen)",
        "order": 5,
        "width": "12",
        "height": "2",
        "head": "",
        "format": "<template>\n    <div>\n        <p class=\"section-title\">Latest Observations</p>\n    </div>\n    <div class=\"container\">\n        <div v-for=\"item in msg.payload\" :key=\"item.details.id\" class=\"item\">\n            <v-img\n                height=\"2in\"\n                position=\"10px\"\n                :src=\"item.img\">\n            </v-img>\n            <table style=\"position:relative;left:10px;right:10px;\">\n                <tbody>\n                    <tr><td class=\"tbl-caption\">id:</td><td class=\"tbl-value\">{{item.details.id}}</td></tr>\n                    <tr><td class=\"tbl-caption\">type:</td><td class=\"tbl-value\">{{item.details.label}}</td></tr>\n                    <tr><td class=\"tbl-caption\">time:</td><td class=\"tbl-value\">{{item.details.frame_time_datestring}}</td></tr>\n                    <tr><td class=\"tbl-caption\">direction:</td><td class=\"tbl-value\">{{item.details.direction_calc}}</td></tr>\n                    <tr><td class=\"tbl-caption\">speed:</td><td class=\"tbl-value\">{{item.details.speed_calc}}</td></tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</template>\n\n<style scoped>\n    .container {\n        /* Styling for the whole image area */\n        display: flex; /* Use flexbox to arrange items horizontally */\n        flex-wrap: wrap; /* Make items from wrap to the next line */\n        overflow-x: auto; /* Enable horizontal scrolling if necessary */\n    }\n\n    .item {\n        /* Styling for each item */\n        max-width: 2.5in;\n        min-width: 2.5in; /* Ensure items don't collapse if content is small */\n    }\n\n    .tbl-caption {\n         width: 25%;\n    }\n    \n    .tbl-value {\n        width: 75%;\n        word-wrap: break-word;\n    }\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "section-border",
        "x": 800,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "ae4b925039bf6e52",
        "type": "function",
        "z": "0fa19dea799cc41d",
        "g": "dc5a88bd7605f321",
        "name": "reorder types to get consistent colors",
        "func": "// reorder types to get consistent colors across charts\nconst types = ['bicycle', 'person', 'car', 'dog', 'motorcycle'];\nconst results = [];\nfor (const type of types) {\n     const entry = msg.payload.find(entry => entry.label === type);\n     if (entry !== undefined) {\n          const count = entry.count;\n          const result = {label: type, count};\n          results.push(result);\n     }\n}\nmsg.payload = results;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 440,
        "wires": [
            [
                "d077a9d3b85203c0"
            ]
        ]
    },
    {
        "id": "5596ebe888e76042",
        "type": "ui-group",
        "name": "Monitoring",
        "page": "68a77cc4790c34c8",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "2a8899583532edb4",
        "type": "ui-base",
        "name": "Database",
        "path": "/dashboard",
        "appIcon": "",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "headerContent": "page",
        "navigationStyle": "temporary",
        "titleBarStyle": "default",
        "showReconnectNotification": true,
        "notificationDisplayTime": "1",
        "showDisconnectNotification": true,
        "allowInstall": true
    },
    {
        "id": "68a77cc4790c34c8",
        "type": "ui-page",
        "name": "Monitoring",
        "ui": "2a8899583532edb4",
        "path": "/monitoring",
        "icon": "home",
        "layout": "grid",
        "theme": "14550b211f0fccc6",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 1,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "14550b211f0fccc6",
        "type": "ui-theme",
        "name": "Default Theme",
        "colors": {
            "surface": "#ffffff",
            "primary": "#0094CE",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "density": "default",
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    }
]