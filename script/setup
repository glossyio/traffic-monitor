#!/bin/bash

# script/setup: Set up application for the first time after cloning, or set it
#               back to the initial first unused state.

set -e

cd "$(dirname "$0")/.."

#uncomment for fresh OS install
#script/bootstrap

echo "==> Setting up Services…"
##-- install Frigate
## Add Frigate Dockerfile
#create directories and config.yml
mkdir -p ~/code/frigate  #for files
mkdir -p ~/code/frigate/config  #for frigate configuration file
mkdir -p ~/code/frigate/storage  #for media
cp docker-frigate/docker-compose-frigate.yaml ~/code/frigate/docker-compose-frigate.yml

#create config file, with hostname for rpi for streaming using go2rtc
#cp docker-frigate/frigate-config.yaml ~/code/frigate/config/config.yml
# envsubst will replace ${SYSTEM_VAR} in config, only used for HOSTNAME right now
export HOSTNAME=$HOSTNAME
envsubst < docker-frigate/frigate-config.yaml > ~/code/frigate/config/config.yml

##-- /frigate


##-- set up node-red as service on host OS
mkdir -p ~/code/nodered/db
sudo cp -rp node-red-project/* ~/.node-red

# node-red nodes install/reinstall
npm install --unsafe-perm --no-update-notifier --no-fund --only=production --prefix ~/.node-red/

##-- /node-red


#create backup directory
mkdir -p ~/code/backup

##--add combined compose file to start all services
cp compose.yaml ~/code/compose.yaml

echo "==> Setting up go2rtc systemd service…"

##-- set up go2rtc to use the Rpi camera
#   Doing it here instead of container to utilize rpicam-vid app
#    in future, consider building container with rpicam-vid
#    using https://hub.docker.com/r/alexxit/go2rtc 
#    and/or https://hub.docker.com/r/mpromonet/v4l2rtspserver 

echo \
  "# /etc/systemd/system/go2rtc_server.service
# to run: sudo systemctl stop/start/restart/enable/disable go2rtc_server

[Unit]
Description=go2rtc
After=network.target rc-local.service

[Service]
Restart=always
WorkingDirectory=/var/lib/go2rtc/
ExecStart=/var/lib/go2rtc/go2rtc_linux_arm64

[Install]
WantedBy=multi-user.target" | \
  sudo tee /etc/systemd/system/go2rtc_server.service > /dev/null
sudo chmod 644 /etc/systemd/system/go2rtc_server.service

echo \
"# /var/lib/go2rtc/go2rtc.yaml
streams:
  picam_h264: exec:rpicam-vid --camera 0 --mode 2304:1296 --framerate 15 --exposure sport --hdr --timeout 0 --nopreview --codec h264 --libav-video-codec h264 --libav-format h264 --inline -o -
  picam_gs_h264: exec:rpicam-vid --camera 1 --mode 1456:1088 --framerate 15 --exposure sport --hdr --timeout 0 --nopreview --codec h264 --libav-video-codec h264 --libav-format h264 --inline -o -" | \
  sudo tee /var/lib/go2rtc/go2rtc.yaml > /dev/null
sudo chmod 744 /var/lib/go2rtc/go2rtc.yaml

#rpicam-vid settings
# rpicam-vid --list-cameras for modes available

