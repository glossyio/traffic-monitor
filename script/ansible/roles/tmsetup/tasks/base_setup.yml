---
# TMSetup - Base Setup tasks
- name: TMSetup - Base Setup - Add TM user to sudo group
  become: true
  ansible.builtin.user:
    append: true
    groups: sudo
    name: '{{ tmsetup_codeowner }}'

- name: TMSetup - Base Setup - Run full update
  become: true
  async: 3600
  poll: 0
  ansible.builtin.apt:
    update_cache: true
    upgrade: full
  register: tmsetup_apt_update_register
  changed_when: false
  
- name: TMSetup - Base Setup - Monitor update job for results
  become: true
  ansible.builtin.async_status:
    jid: "{{ tmsetup_apt_update_register.ansible_job_id }}"
  register: tmsetup_apt_upate_job_register
  until: tmsetup_apt_upate_job_register.finished
  retries: 360
  delay: 10

- name: TMSetup - Base Setup - Check if reboot needed
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: tmsetup_reboot_required_stat_register
  changed_when: tmsetup_reboot_required_stat_register.stat.exists
  notify: TMSetup - Flag for reboot

- name: TMSetup - Base Setup - Create code owner
  become: true
  ansible.builtin.user:
    append: true
    groups: '{{ tmsetup_codegroup }}'
    name: '{{ tmsetup_codeowner }}'
    state: present
  register: tmsetup_base_register_user_codeowner

- name: TMSetup - Base Setup - Set var for codeowner home directory
  ansible.builtin.set_fact:
    tmsetup_codeowner_homedir: '{{ tmsetup_base_register_user_codeowner.home }}'

- name: TMSetup - Base Setup - Set timezone
  become: true
  community.general.timezone:
    name: '{{ tmsetup_timezone }}'

- name: TMSetup - Base Setup - Create Directories
  become: true
  loop:
    - '{{ tmsetup_codedir }}'
    - '{{ tmsetup_codedir }}/services'
    - '{{ tmsetup_codedir }}/utils'
  ansible.builtin.file:
    group: '{{ tmsetup_codegroup }}'
    mode: '0750'
    owner: '{{ tmsetup_codeowner }}'
    path: '{{ item }}'
    state: directory

- name: TMSetup - Base Setup - Remove conflicting packages
  become: true
  ansible.builtin.apt:
    autoremove: true
    name: '{{ tmsetup_remove_packages }}'
    purge: true
    state: absent

- name: TMSetup - Base Setup - Install required packages
  become: true
  ansible.builtin.apt:
    name: '{{ tmsetup_packages }}'
    state: present
    update_cache: false

- name: TMSetup - Base Setup - Copy utils files to codedir
  become: true
  ansible.builtin.copy:
    src: utils/
    dest: "{{ tmsetup_codedir }}/utils/"
    owner: "{{ tmsetup_codeowner }}"
    group: "{{ tmsetup_codegroup }}"
    mode: "0755"

...
