---
# TMSetup - Frigate Setup tasks

- name: TMSetup - Frigate Setup - Check for PCIE Coral TPUs
  loop: "{{ tmsetup_pcie_tpu_paths }}"
  ansible.builtin.stat:
    path: "{{ item }}"
  register: tmsetup_pcietpupath_stat_register

- name: TMSetup Frigate Setup - Add existing PCIE Coral TPUs to list
  loop: "{{ tmsetup_pcietpupath_stat_register.results }}"
  when: item['stat']['exists'] | bool
  ansible.builtin.set_fact:
    tmsetup_pcietpus_confirmed: "{{ tmsetup_pcietpus_confirmed | default([]) + [item['stat']['path']] }}"

- name: TMSetup - Frigate Setup - Create Frigate Directories
  become: true
  loop:
    - '{{ tmsetup_codedir }}'
    - '{{ tmsetup_codedir }}/frigate'
    - '{{ tmsetup_codedir }}/frigate/config'
    - '{{ tmsetup_codedir }}/frigate/storage'
  ansible.builtin.file:
    group: '{{ tmsetup_codegroup }}'
    mode: '0750'
    owner: '{{ tmsetup_codeowner }}'
    path: '{{ item }}'
    state: directory
  notify: Restart tm-docker service

- name: TMSetup - Frigate Setup - Create Frigate docker files
  become: true
  loop:
    - frigate/config/config.yml
    - frigate/docker-compose-frigate.yaml
    - frigate/frigate.env
  ansible.builtin.template:
    backup: true
    dest: '{{ tmsetup_codedir }}/{{ item }}'
    force: '{{ tmsetup_force_configs }}'
    group: '{{ tmsetup_codegroup }}'
    mode: '0640'
    owner: '{{ tmsetup_codeowner }}'
    src: '{{ item }}.j2'
  notify:
    - Build container images
    - Restart tm-docker service
...
